C W+RWC+porlxrlx+porlxp+poprlx
"PodWWRlxRlx RfeRlxRlx PodRRRlxP Fre PodWRPRlx FreRlxRlx"
Cycle=RfeRlxRlx PodRRRlxP Fre PodWRPRlx FreRlxRlx PodWWRlxRlx
Relax=
Safe=Fre PodWW PodWR PodRR RfeRlxRlx FreRlxRlx
Prefetch=0:x=F,0:y=W,1:y=F,1:z=T,2:z=F,2:x=T
Com=Rf Fr Fr
Orig=PodWWRlxRlx RfeRlxRlx PodRRRlxP Fre PodWRPRlx FreRlxRlx

{}

P0 (atomic_int* y,atomic_int* x) {
  atomic_store_explicit(x,1,memory_order_relaxed);
  atomic_store_explicit(y,1,memory_order_relaxed);
}

P1 (volatile int* z,atomic_int* y) {
  int r0 = atomic_load_explicit(y,memory_order_relaxed);
  int r1 = *z;
}

P2 (volatile int* z,atomic_int* x) {
  *z = 1;
  int r0 = atomic_load_explicit(x,memory_order_relaxed);
}

exists
(1:r0=1 /\ 1:r1=0 /\ 2:r0=0)
