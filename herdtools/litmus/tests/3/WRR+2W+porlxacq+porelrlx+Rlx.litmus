C WRR+2W+porlxacq+porelrlx+Rlx
"RfeRlxRlx PodRRRlxAcq FreAcqRel PodWWRelRlx WseRlxRlx"
Cycle=RfeRlxRlx PodRRRlxAcq FreAcqRel PodWWRelRlx WseRlxRlx
Relax=
Safe=PodWW PodRR FreAcqRel RfeRlxRlx WseRlxRlx
Prefetch=1:x=F,1:y=T,2:y=F,2:x=W
Com=Rf Fr Ws
Orig=RfeRlxRlx PodRRRlxAcq FreAcqRel PodWWRelRlx WseRlxRlx

{}

P0 (atomic_int* x) {
  atomic_store_explicit(x,2,memory_order_relaxed);
}

P1 (atomic_int* y,atomic_int* x) {
  int r0 = atomic_load_explicit(x,memory_order_relaxed);
  int r1 = atomic_load_explicit(y,memory_order_acquire);
}

P2 (atomic_int* y,atomic_int* x) {
  atomic_store_explicit(y,1,memory_order_release);
  atomic_store_explicit(x,1,memory_order_relaxed);
}

exists
(x=2 /\ 1:r0=2 /\ 1:r1=0)
