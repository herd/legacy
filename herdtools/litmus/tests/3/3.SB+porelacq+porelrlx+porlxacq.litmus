C 3.SB+porelacq+porelrlx+porlxacq
"PodWRRelAcq FreAcqRel PodWRRelRlx FreRlxRlx PodWRRlxAcq FreAcqRel"
Cycle=FreAcqRel PodWRRelAcq FreAcqRel PodWRRelRlx FreRlxRlx PodWRRlxAcq
Relax=
Safe=PodWR FreAcqRel FreRlxRlx
Prefetch=0:x=F,0:y=T,1:y=F,1:z=T,2:z=F,2:x=T
Com=Fr Fr Fr
Orig=PodWRRelAcq FreAcqRel PodWRRelRlx FreRlxRlx PodWRRlxAcq FreAcqRel

{}

P0 (atomic_int* y,atomic_int* x) {
  atomic_store_explicit(x,1,memory_order_release);
  int r0 = atomic_load_explicit(y,memory_order_acquire);
}

P1 (atomic_int* z,atomic_int* y) {
  atomic_store_explicit(y,1,memory_order_release);
  int r0 = atomic_load_explicit(z,memory_order_relaxed);
}

P2 (atomic_int* z,atomic_int* x) {
  atomic_store_explicit(z,1,memory_order_relaxed);
  int r0 = atomic_load_explicit(x,memory_order_acquire);
}

exists
(0:r0=0 /\ 1:r0=0 /\ 2:r0=0)
