C R+porelrlx+porlxacq
"PodWWRelRlx WseRlxRlx PodWRRlxAcq FreAcqRel"
Cycle=FreAcqRel PodWWRelRlx WseRlxRlx PodWRRlxAcq
Relax=
Safe=PodWW PodWR FreAcqRel WseRlxRlx
Prefetch=0:x=F,0:y=W,1:y=F,1:x=T
Com=Ws Fr
Orig=PodWWRelRlx WseRlxRlx PodWRRlxAcq FreAcqRel

{}

P0 (atomic_int* y,atomic_int* x) {
  atomic_store_explicit(x,1,memory_order_release);
  atomic_store_explicit(y,1,memory_order_relaxed);
}

P1 (atomic_int* y,atomic_int* x) {
  atomic_store_explicit(y,2,memory_order_relaxed);
  int r0 = atomic_load_explicit(x,memory_order_acquire);
}

exists
(y=2 /\ 1:r0=0)
