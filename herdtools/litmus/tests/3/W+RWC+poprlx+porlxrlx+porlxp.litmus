C W+RWC+poprlx+porlxrlx+porlxp
"PodWWPRlx RfeRlxRlx PodRRRlxRlx FreRlxRlx PodWRRlxP Fre"
Cycle=RfeRlxRlx PodRRRlxRlx FreRlxRlx PodWRRlxP Fre PodWWPRlx
Relax=
Safe=Fre PodWW PodWR PodRR RfeRlxRlx FreRlxRlx
Prefetch=0:x=F,0:y=W,1:y=F,1:z=T,2:z=F,2:x=T
Com=Rf Fr Fr
Orig=PodWWPRlx RfeRlxRlx PodRRRlxRlx FreRlxRlx PodWRRlxP Fre

{}

P0 (atomic_int* y,volatile int* x) {
  *x = 1;
  atomic_store_explicit(y,1,memory_order_relaxed);
}

P1 (atomic_int* z,atomic_int* y) {
  int r0 = atomic_load_explicit(y,memory_order_relaxed);
  int r1 = atomic_load_explicit(z,memory_order_relaxed);
}

P2 (atomic_int* z,volatile int* x) {
  atomic_store_explicit(z,1,memory_order_relaxed);
  int r0 = *x;
}

exists
(1:r0=1 /\ 1:r1=0 /\ 2:r0=0)
